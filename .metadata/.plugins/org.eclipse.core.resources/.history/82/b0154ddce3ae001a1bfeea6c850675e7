package inhatc.capstone.admin.controller;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import inhatc.capstone.common.map.CommandMap;
import inhatc.capstone.admin.service.AdminService;

@Controller
public class AdminController {
	Logger log = Logger.getLogger(this.getClass());
	 
    @Resource(name="adminService")
    private AdminService adminService;

   @RequestMapping(value="/admin/openAdmin.do")
   public ModelAndView openAdmin(Map<String,Object> commandMap) throws Exception{
	   List<Map<String,Object>> list = adminService.selectReportList(commandMap);
	   List<Map<String,Object>> list2 = adminService.selectRpComList(commandMap);
	   ModelAndView mv = new ModelAndView("/admin/admin");
	   mv.addObject("list", list);
	   mv.addObject("list2", list2);
	   return mv;
   }
   
   @RequestMapping(value="/admin/openUserList.do")
   @ResponseBody
   public List<Map<String,Object>> openUserList(CommandMap commandMap) throws Exception{
	   List<Map<String,Object>> list = adminService.selectUserList(commandMap.getMap());
	   return list;
   } 
   
   @RequestMapping(value="/admin/openReportBoard.do")
   @ResponseBody
   public List<Map<String,Object>> openReportBoard(CommandMap commandMap) throws Exception{
	   List<Map<String,Object>> list = adminService.selectReportBoard(commandMap.getMap());
	   return list;
   }
   
   @RequestMapping(value="/admin/reportProcess.do")
   public ModelAndView reportProcess(CommandMap commandMap) throws Exception{ 
	   String day = (String)commandMap.get("CHECKSTOP");
	   
	   adminService.deleteBoard(commandMap.getMap());
       adminService.updateReport(commandMap.getMap());
       adminService.insertRpCompleted(commandMap.getMap());
       
       if(!(day.equals("없음"))) {
    	   Map<String,Object> map = adminService.selectUserStop(commandMap.getMap());
    	   String select_id = (String) map.get("US_ID");
    	   String select_day = (String) map.get("US_DAY");
    	   if(select_id.length() == 0 ) {
    		   adminService.insertUserStop(commandMap.getMap());
    	   }
    	   else if(select_id.length() > 0) {
    		   if(select_day.equals("없음")) adminService.updateUsDay(map);
    		   else if(select_day.equals("영구")) {}
    		   else {
    			   
    		   }
    		   
    	   }
    	   
       }
       
       ModelAndView mv = new ModelAndView("/popup");
       mv.addObject("msg", "처리되었습니다.");
       mv.addObject("loc", "/admin/openAdmin.do");
       return mv;
   }
   
   @RequestMapping(value="/admin/updateRpcom.do")
   @ResponseBody
   public boolean updateRpcom(CommandMap commandMap) throws Exception{ 
	   
	   adminService.deleteBoard(commandMap.getMap());
       adminService.updateRpcom(commandMap.getMap());
       return true;
   }

}
